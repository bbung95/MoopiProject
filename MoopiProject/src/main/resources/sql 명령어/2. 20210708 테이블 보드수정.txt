ALTER TABLE	USERS	DROP CONSTRAINTS	USERS_FK_INTEREST1	;
ALTER TABLE	USERS	DROP CONSTRAINTS	USERS_FK_INTEREST2	;
ALTER TABLE	USERS	DROP CONSTRAINTS	USERS_FK_INTEREST3	;
ALTER TABLE	MOIM	DROP CONSTRAINTS	MOIM_FK_ID	;
ALTER TABLE	MOIM	DROP CONSTRAINTS	MOIM_FK_INTEREST	;
ALTER TABLE	MEMBER	DROP CONSTRAINTS	MEMBER_FK_ID	;
ALTER TABLE	MEMBER	DROP CONSTRAINTS	MEMBER_FK_MMNO	;
ALTER TABLE	MEETING	DROP CONSTRAINTS	MEETING_FK_MMNO	;
ALTER TABLE	MEETING	DROP CONSTRAINTS	MEETING_FK_MTID	;
ALTER TABLE	MEETING_FLASH_MEMBER	DROP CONSTRAINTS	MEFL_FK_ID	;
ALTER TABLE	FLASH	DROP CONSTRAINTS	FLASH_FK_ID	;
ALTER TABLE	FLASH	DROP CONSTRAINTS	FLASH_FK_INTEREST	;
ALTER TABLE	COIN	DROP CONSTRAINTS	COIN_FK_ID	;
ALTER TABLE	COIN	DROP CONSTRAINTS	COIN_FK_FLASHNO	;
ALTER TABLE	PAYMENT	DROP CONSTRAINTS	PAYMENT_FK_ID	;
ALTER TABLE	LETTER	DROP CONSTRAINTS	LETTER_FK_ID	;
ALTER TABLE	LETTER	DROP CONSTRAINTS	LETTER_FK_TARGET	;
ALTER TABLE	NOTICE	DROP CONSTRAINTS	NOTICE_FK_ID	;
ALTER TABLE	BOARD	DROP CONSTRAINTS	BOARD_FK_ID	;
ALTER TABLE	BOARD	DROP CONSTRAINTS	BOARD_FK_MMNO	;
ALTER TABLE	REPLY	DROP CONSTRAINTS	REPLY_FK_ID	;
ALTER TABLE	REPLY	DROP CONSTRAINTS	REPLY_FK_BDNO	;
ALTER TABLE	FOLLOW_LIKE	DROP CONSTRAINTS	FOLLOWLIKE_FK_ID	;
ALTER TABLE	BOARD_FILE	DROP CONSTRAINTS	BDFILE_FK_BDNO	;
ALTER TABLE	REPORT	DROP CONSTRAINTS	REPORT_FK_ID	;


drop table users;
drop table member;
drop table moim;
drop table interest;
drop table meeting;       
drop table meeting_flash_member;       
drop table flash;
drop table coin;
drop table payment;
drop table letter;
drop table notice;
drop table board;
drop table reply;
drop table follow_like;
drop table board_file;
drop table badge_list;
drop table report;

drop sequence users_seq;  
drop sequence member_seq;  
drop sequence moim_seq;  
drop sequence meeting_seq;  
drop sequence meeting_flash_member_seq;  
drop sequence flash_seq; 
drop sequence coin_seq;  
drop sequence payment_seq;  
drop sequence letter_seq;  
drop sequence notice_seq; 
drop sequence board_seq; 
drop sequence reply_seq;  
drop sequence follow_like_seq;  
drop sequence board_file_seq;  
drop sequence badge_list_seq;  
drop sequence report_seq;  


PURGE RECYCLEBIN;


CREATE TABLE USERS(
	USER_ID			VARCHAR2(50) primary key
,	PWD			VARCHAR2(20) not null
,	USER_NAME		VARCHAR2(50) not null
,	PHONE 			VARCHAR2(11)  NOT NULL
,	BIRTH			DATE					 NOT NULL
,	AGE			NUMERIC		NOT NULL
,	GENDER			VARCHAR2(15)	 		 NOT NULL
,	JOIN_PATH		CHAR(1)  NOT NULL
,	REGDATE			DATE DEFAULT   SYSDATE   NOT NULL
,	USER_ROLE		VARCHAR2(5)				 NOT NULL
,	FULL_ADDR		VARCHAR2(100)			 NOT NULL
,	ADDR			VARCHAR2(10)			 NOT NULL
,	NICKNAME		VARCHAR2(50)			 NOT NULL
,	PROFILE_IMAGE		VARCHAR2(100)
,	PROFILE_CONTENT		VARCHAR2(300)
,	INTEREST_FIRST		NUMERIC
,	INTEREST_SECOND		NUMERIC
,	INTEREST_THIRD		NUMERIC
,	MYHOME_STATE		CHAR(1)
,	STATE_REASON		VARCHAR2(150)
,	STATE_REGDATE		DATE
,	COIN			NUMBER
,	BADGE				CHAR(1)
);

CREATE SEQUENCE USERS_SEQ
START WITH 10001
INCREMENT BY 1;


CREATE TABLE MOIM(
	MM_NO			NUMBER PRIMARY KEY	
,	MM_NAME		VARCHAR2(50)  not null
,	MM_CONTENT		VARCHAR2(300)  not null
,	MM_IMAGE		VARCHAR2(100)  not null
,	MM_MAX_COUNT		NUMBER not null
,	MM_CURRENT_COUNT	NUMBER  NOT NULL
,	MM_CONSTRUCTOR		VARCHAR2(50) not null
,	MM_REGDATE		DATE DEFAULT   SYSDATE not null
,	MM_INTEREST		NUMERIC not null
,	MM_ADDR		VARCHAR2(10)  not null
,	MM_STATE		CHAR(1) not null
,	MM_MIN_AGE		NUMBER
,	MM_MAX_AGE		NUMBER
,	MM_TYPE			CHAR(1) not null
);


CREATE SEQUENCE MOIM_SEQ
START WITH 10001
INCREMENT BY 1;

CREATE TABLE INTEREST(
	INTEREST_NO		NUMBER PRIMARY KEY,
	INTEREST_NAME		VARCHAR2(50)  NOT NULL
);

CREATE TABLE MEMBER(
	MEMBER_NO		NUMBER PRIMARY KEY
,	MM_MEMBER_ID		VARCHAR2(50) not null
,	MM_NO			NUMBER not null
,	MM_MEMBER_ROLE		VARCHAR2(10) not null
,	MM_MEMBER_REGDATE	DATE DEFAULT   SYSDATE not null
);

CREATE SEQUENCE MEMBER_SEQ
START WITH 10001
INCREMENT BY 1;


CREATE TABLE MEETING(
	MT_NO			NUMBER PRIMARY KEY	
,	MM_NO			NUMBER not null
,	MT_NAME		VARCHAR2(100) not null
,	MT_CONTENT		VARCHAR2(500) not null
,	MT_START_DATE		DATE not null
,	MT_END_DATE		DATE not null
,	MT_REGDATE		DATE DEFAULT   SYSDATE not null
,	MT_MAX_COUNT		NUMBER not null
,	MT_CURRENT_COUNT	NUMBER  NOT NULL
,	MT_CONSTRUCTOR		VARCHAR2(50)  not null
,	MT_ADDR		VARCHAR2(50) not null
,	MT_STATE		CHAR(1) not null
,	MT_MAP_X		VARCHAR2(20) not null
,	MT_MAP_Y		VARCHAR2(20) not null
);
 
CREATE SEQUENCE MEETING_SEQ
START WITH 10001
INCREMENT BY 1;

CREATE TABLE MEETING_FLASH_MEMBER(
	MEFL_NO		NUMBER PRIMARY KEY
,	MEFL_ID		VARCHAR2(50) NOT NULL
,	TARGET_NO	NUMBER NOT NULL
,	JOIN_REGDATE	DATE DEFAULT   SYSDATE NOT NULL
,	JOIN_STATE	CHAR(1) NOT NULL
,	MEFL_TYPE	CHAR(1) NOT NULL
);

CREATE SEQUENCE MEETING_FLASH_MEMBER_SEQ
START WITH 10001
INCREMENT BY 1;



CREATE TABLE FLASH(
	FLASH_NO		NUMBER PRIMARY KEY	
,	FLASH_NAME		VARCHAR2(50)  NOT NULL
,	FLASH_CONTENT		VARCHAR2(500)  NOT NULL
,	FLASH_FILE		VARCHAR2(100)
,	FLASH_CONSTRUCTOR	VARCHAR2(50)  NOT NULL
,	FLASH_REGDATE		DATE DEFAULT   SYSDATE  NOT NULL
,	FLASH_TIME			DATE  NOT NULL
,	FLASH_CURRENT_COUNT		NUMBER  NOT NULL	
,	FLASH_MAX_COUNT		NUMBER  NOT NULL
,	FLASH_ADDR			VARCHAR2(50)  NOT NULL
,	FLASH_STATE			CHAR(1) NOT NULL
,	FLASH_INTEREST	NUMERIC NOT NULL
,	FLASH_MAP_X			VARCHAR2(20) NOT NULL
,	FLASH_MAP_Y			VARCHAR2(20)  NOT NULL
);
 
CREATE SEQUENCE FLASH_SEQ
START WITH 10001
INCREMENT BY 1;



CREATE TABLE COIN(
	COIN_NO			NUMBER PRIMARY KEY
,	COIN_REGDATE		DATE DEFAULT   SYSDATE  NOT NULL
,	COIN_ROLE		VARCHAR2(20)  NOT NULL
,	COIN_COUNT		NUMBER  NOT NULL
,	USER_ID			VARCHAR2(50)  NOT NULL
,	FLASH_NO		NUMBER
);

CREATE SEQUENCE COIN_SEQ
START WITH 10001
INCREMENT BY 1;

CREATE TABLE PAYMENT(
	PAYMENT_NO		NUMBER PRIMARY KEY
,	PAYMENT_REGDATE	DATE DEFAULT   SYSDATE  NOT NULL
,	PAYMENT_ROLE		VARCHAR2(20)  NOT NULL
,	PAYMENT_USER_ID		VARCHAR2(50)  NOT NULL
,	PAYMENT_PRICE		NUMBER  NOT NULL
,	PAYMENT_COIN_COUNT	NUMBER  NOT NULL
,	PAYMENT_UID		VARCHAR2(100)  NOT NULL
);

CREATE SEQUENCE PAYMENT_SEQ
START WITH 10001
INCREMENT BY 1;


CREATE TABLE LETTER(
	LETTER_NO			NUMBER PRIMARY KEY
,	LETTER_USER_ID		VARCHAR2(50) NOT NULL
,	LETTER_TARGET_ID	VARCHAR2(50) NOT NULL
,	LETTER_CONTENT		VARCHAR2(300) NOT NULL
,	LETTER_REGDATE		DATE DEFAULT   SYSDATE NOT NULL 
);

CREATE SEQUENCE LETTER_SEQ
START WITH 10001
INCREMENT BY 1;


CREATE TABLE NOTICE(
	NOTICE_NO		NUMBER PRIMARY KEY
,	NOTICE_TO_USER_ID	VARCHAR2(50) NOT NULL
,	NOTICE_TARGER		VARCHAR2(50) NOT NULL
,	NOTICE_CONTENT		VARCHAR2(100) NOT NULL
,	NOTICE_REGDATE		DATE DEFAULT   SYSDATE NOT NULL
,	NOTICE_STATE		CHAR(1) NOT NULL
,	CATEGORY		VARCHAR2(2) NOT NULL
);

CREATE SEQUENCE NOTICE_SEQ
START WITH 10001
INCREMENT BY 1;



-----------
CREATE TABLE BOARD (
	BD_NO			NUMBER primary key
,	BD_CATEGORY		CHAR(1) not null    
,	BD_WRITER		VARCHAR2(50) not null    
,	BD_NAME		VARCHAR2(100)	
,	BD_CONTENT		VARCHAR2(2000) not null    
,	BD_REGDATE		DATE DEFAULT SYSDATE not null    
,	BD_UPDATE		DATE
,	BD_STATE			CHAR(1)  not null    
,	BD_PASSWORD		VARCHAR2(4)
,	BD_MM_NO		NUMBER 
);


CREATE SEQUENCE BOARD_SEQ
START WITH 10001
INCREMENT BY 1;

create table REPLY(
	REPLY_NO		number  primary key 
,	BD_NO			NUMERIC  not null
,	REPLY_WRITER	VARCHAR2(30) not null     
,	REPLY_CONTENT		VARCHAR2(500) not null 
,	REPLY_FILE			VARCHAR2(100) 
,	REPLY_REGDATE 		date default sysdate  not null
,	REPLY_STATE 		CHAR(1)  not null
);


create sequence reply_seq  
start with 10001
increment by 1;

CREATE TABLE FOLLOW_LIKE(
	FL_NO			number primary key 
,	USER_ID			VARCHAR2(50)  not null 
,	FL_TARGET		VARCHAR2(50) not null   
,	FL_TYPE			CHAR(1) not null
);

CREATE SEQUENCE FOLLOW_LIKE_SEQ
START WITH 10001
INCREMENT BY 1;

CREATE TABLE BOARD_FILE(
	BD_NO			number  not null
,	BDFILE_NAME		VARCHAR2(100) NOT NULL      
,	BDFILE_NO		NUMBER primary key 
);

CREATE SEQUENCE BOARD_FILE_SEQ
START WITH 10001
INCREMENT BY 1;


CREATE TABLE BADGE_LIST(
	BADGE_GET_NO		number primary key
,	USER_ID			VARCHAR2(50) NOT NULL          
,	BADGE_FILE_NAME		VARCHAR2(100)  not null
);

CREATE SEQUENCE BADGE_LIST_SEQ
START WITH 10001
INCREMENT BY 1;


CREATE TABLE REPORT(
	RP_NO			NUMBER primary key
,	RP_USER_ID		VARCHAR2(50) not null
,	RP_TYPE			VARCHAR2(20) not null
,	RP_CONTENT		VARCHAR2(500) not null
,	RP_IMAGE		VARCHAR2(100) 
,	RP_REGDATE		DATE DEFAULT   SYSDATE  not null
,	RP_TARGET		VARCHAR2(50)  not null
,	RP_CATEGORY		CHAR(1)	  not null
,	RP_RESULT_STATE		VARCHAR2(30)
,	RP_RESULT_UPDATE	DATE
,	STATE_REASON		VARCHAR2(200)
);

CREATE SEQUENCE REPORT_SEQ
START WITH 10001
INCREMENT BY 1;
ALTER TABLE	USERS	ADD CONSTRAINT	USERS_FK_INTEREST1	FOREIGN KEY (	INTEREST_FIRST	) REFERENCES	INTEREST	(	INTEREST_NO	);
ALTER TABLE	USERS	ADD CONSTRAINT	USERS_FK_INTEREST2	FOREIGN KEY (	INTEREST_SECOND	) REFERENCES	INTEREST	(	INTEREST_NO	);
ALTER TABLE	USERS	ADD CONSTRAINT	USERS_FK_INTEREST3	FOREIGN KEY (	INTEREST_THIRD	) REFERENCES	INTEREST	(	INTEREST_NO	);
ALTER TABLE	MOIM	ADD CONSTRAINT	MOIM_FK_ID	FOREIGN KEY (	MM_CONSTRUCTOR	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	MOIM	ADD CONSTRAINT	MOIM_FK_INTEREST	FOREIGN KEY (	MM_INTEREST	) REFERENCES	INTEREST	(	INTEREST_NO	);
ALTER TABLE	MEMBER	ADD CONSTRAINT	MEMBER_FK_ID	FOREIGN KEY (	MM_MEMBER_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	MEMBER	ADD CONSTRAINT	MEMBER_FK_MMNO	FOREIGN KEY (	MM_NO	) REFERENCES	MOIM	(	MM_NO	);
ALTER TABLE	MEETING	ADD CONSTRAINT	MEETING_FK_MMNO	FOREIGN KEY (	MM_NO	) REFERENCES	MOIM	(	MM_NO	);
ALTER TABLE	MEETING	ADD CONSTRAINT	MEETING_FK_MTID	FOREIGN KEY (	MT_CONSTRUCTOR	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	MEETING_FLASH_MEMBER	ADD CONSTRAINT	MEFL_FK_ID	FOREIGN KEY (	MEFL_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	FLASH	ADD CONSTRAINT	FLASH_FK_ID	FOREIGN KEY (	FLASH_CONSTRUCTOR	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	FLASH	ADD CONSTRAINT	FLASH_FK_INTEREST	FOREIGN KEY (	FLASH_INTEREST	) REFERENCES	INTEREST	(	INTEREST_NO	);
ALTER TABLE	COIN	ADD CONSTRAINT	COIN_FK_ID	FOREIGN KEY (	USER_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	COIN	ADD CONSTRAINT	COIN_FK_FLASHNO	FOREIGN KEY (	FLASH_NO	) REFERENCES	FLASH	(	FLASH_NO	);
ALTER TABLE	PAYMENT	ADD CONSTRAINT	PAYMENT_FK_ID	FOREIGN KEY (	PAYMENT_USER_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	LETTER	ADD CONSTRAINT	LETTER_FK_ID	FOREIGN KEY (	LETTER_USER_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	LETTER	ADD CONSTRAINT	LETTER_FK_TARGET	FOREIGN KEY (	LETTER_TARGET_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	NOTICE	ADD CONSTRAINT	NOTICE_FK_ID	FOREIGN KEY (	NOTICE_TO_USER_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	BOARD	ADD CONSTRAINT	BOARD_FK_ID	FOREIGN KEY (	BD_WRITER	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	BOARD	ADD CONSTRAINT	BOARD_FK_MMNO	FOREIGN KEY (	BD_MM_NO	) REFERENCES	MOIM	(	MM_NO	);
ALTER TABLE	REPLY	ADD CONSTRAINT	REPLY_FK_ID	FOREIGN KEY (	REPLY_WRITER_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	REPLY	ADD CONSTRAINT	REPLY_FK_BDNO	FOREIGN KEY (	BD_NO	) REFERENCES	BOARD	(	BD_NO	);
ALTER TABLE	FOLLOW_LIKE	ADD CONSTRAINT	FOLLOWLIKE_FK_ID	FOREIGN KEY (	USER_ID	) REFERENCES	USERS	(	USER_ID	);
ALTER TABLE	BOARD_FILE	ADD CONSTRAINT	BDFILE_FK_BDNO	FOREIGN KEY (	BD_NO	) REFERENCES	BOARD	(	BD_NO	);
ALTER TABLE	REPORT	ADD CONSTRAINT	REPORT_FK_ID	FOREIGN KEY (	RP_USER_ID	) REFERENCES	USERS	(	USER_ID	);
 
 
