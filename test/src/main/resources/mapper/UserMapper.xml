<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.moopi.mvc.service.user.UserDao">
 	
<resultMap id="userSelectMap" type="user">
		<result property="userId"			column="USER_ID"			jdbcType="VARCHAR"/>
		<result property="password"			column="PWD"				jdbcType="VARCHAR"/>
		<result property="userName"			column="USER_NAME"			jdbcType="VARCHAR"/>
		<result property="phone"			column="PHONE"				jdbcType="VARCHAR"/>
		<result property="birth"			column="BIRTH"				jdbcType="DATE"/>
		<result property="age"				column="AGE"				jdbcType="NUMERIC"/>
		<result property="gender"			column="GENDER"				jdbcType="VARCHAR"/>
		<result property="joinPath"			column="JOIN_PATH"			jdbcType="CHAR"/>
		<result property="regDate"			column="REGDATE"			jdbcType="DATE"/>
		<result property="userRole"			column="USER_ROLE"			jdbcType="VARCHAR"/>
		<result property="fullAddr"			column="FULL_ADDR"			jdbcType="VARCHAR"/>
		<result property="addr"				column="ADDR"				jdbcType="VARCHAR"/>
		<result property="nickname"			column="NICKNAME"			jdbcType="VARCHAR"/>
		<result property="profileImage"		column="PROFILE_IMAGE"		jdbcType="VARCHAR"/>
		<result property="profileContent"	column="PROFILE_CONTENT"	jdbcType="VARCHAR"/>
		<result property="interestFirst"	column="INTEREST_FIRST"		jdbcType="NUMERIC"/>
		<result property="interestSecond"	column="INTEREST_SECOND"	jdbcType="NUMERIC"/>
		<result property="interestThird"	column="INTEREST_THIRD"		jdbcType="NUMERIC"/>
		<result property="myhomeState"		column="MYHOME_STATE"		jdbcType="CHAR"/>
		<result property="stateReason"		column="STATE_REASON"		jdbcType="VARCHAR"/>
		<result property="stateRegdate"		column="STATE_REGDATE"		jdbcType="DATE"/>
		<result property="coin"				column="COIN"				jdbcType="NUMERIC"/>
		<result property="badge"			column="BADGE"				jdbcType="CHAR"/>
	</resultMap>


	<!-- <select id="findPayment" parameterType="int" resultMap="userSelectMap"> 
		SELECT user_id , user_name , password , role , cell_phone , addr , email 
		, reg_date FROM users WHERE user_id = #{userId} </select> -->

	<!-- 회원가입 : JoinPath 가입경로는 차후 추가구현예정 / USER_ROLE은 2 정상회원 -->
	<!-- Full Address의 경우 전체 주소지 입력 / addr의 경우 00구만 출력되게 -->
	<insert id="addUser"			parameterType="user" >
		INSERT 
		INTO users( USER_ID, PWD, USER_NAME, PHONE, BIRTH, AGE, GENDER, JOIN_PATH, REGDATE, USER_ROLE, FULL_ADDR, ADDR, NICKNAME, INTEREST_FIRST, INTEREST_SECOND, INTEREST_THIRD )
		VALUES ( #{userId}, #{password}, #{userName}, '01012345678', '2021-07-01', #{age}, #{gender}, 1, now(), 2, '서울시 성동구', #{addr}, #{nickname}, #{interestFirst}, #{interestSecond}, #{interestThird} );
	</insert>
	
	<!-- 마이홈조회 -->
	<!-- 회원아이디(hidden), 프로필이미지, 닉네임, 뱃지, 코인, 팔로잉수, 팔로워수, 프로필소개, 마이홈게시글 첨부파일, 마이홈게시글 내용, 마이홈게시글 좋아요 수, 모임무피 대표썸네일, 모임무피명, 관심사1,2,3 -->	 
	<select id="getMyHome"			parameterType="user"		resultMap="userSelectMap">
		SELECT
			USER_ID, PROFILE_IMAGE, NICKNAME, PROFILE_CONTENT, INTEREST_FIRST, INTEREST_SECOND, INTEREST_THIRD
		FROM users
		WHERE USER_ID = #{userId};
			<!--  팔로잉수, 팔로워 , PROFILE_CONTENT, 마이홈게시글 첨부파일, 마이홈게시글 내용, 마이홈게시글 좋아요 수, 모임무피 대표썸네일, 모임무피명 -->
	</select>
	
	<!-- 관리자권한 - 회원상세보기 / 아이디, 이름, 닉네임, 모바일번호, 주소지, 생년월일, 연령, 성별, 가입일자, 가입경로, 관심사 / 소모임리스트, 회원로그, 회원블랙사유 -->
	<select id="getUser"			parameterType="String" 		resultMap="userSelectMap">
		SELECT 
		USER_ID, USER_NAME, PWD, NICKNAME, PHONE, ADDR, BIRTH, AGE, GENDER, REGDATE, JOIN_PATH, USER_ROLE, PROFILE_IMAGE, PROFILE_CONTENT,
		INTEREST_FIRST, INTEREST_SECOND, INTEREST_THIRD, 
		PROFILE_IMAGE, COIN, BADGE, MYHOME_STATE, STATE_REASON, STATE_REGDATE
		FROM users 
		WHERE USER_ID = #{userId}
	</select>
	
	<update id="makeFlashCoin" parameterType="user">
		UPDATE USERS
		<set>
			COIN = COIN -2
		</set>
		WHERE USER_ID = #{userId}
	</update>

	<update id="joinFlashCoin" parameterType="user">
		UPDATE USERS
		<set>
			COIN = COIN -1
		</set>
		WHERE USER_ID = #{userId}
	</update>
   
	<select id="nicknameCheck"		parameterType="String"		resultType="int">
		SELECT count(*)
		FROM users
		WHERE NICKNAME = #{nickname}
	</select>
	
	<select id="userIdCheck" 		parameterType="String"		resultType="int">
		SELECT count(*) 
		FROM users 
		WHERE USER_ID = #{userId}
	</select>
	
	<select id="loginUser"			parameterType="String"		resultMap="userSelectMap">
		SELECT
			USER_ID, PWD, USER_ROLE
		FROM users
		WHERE USER_ID = #{userId}
	</select> 
		
	<!-- 아이디찾기 -->
	<select id="getUserId"			parameterType="String" 		resultMap="userSelectMap">
		SELECT USER_ID
		FROM users
		WHERE USER_ID = #{userId}
	</select>
	
	<!-- 모바일번호, 비밀번호 변경 -->
	<update id="updateUser"			parameterType="user">
		UPDATE users
		<set>
			PHONE = #{phone},
			PWD = #{password},
			NICKNAME = #{nickname}
		</set>
		WHERE USER_ID = #{userId};
	</update>
	
	<!-- 회원탈퇴  --> 
	 <select id="updateLeaveUser"	parameterType="user">
	 	UPDATE users
		<set>
			USER_ROLE = '5'
		</set>
		WHERE USER_ID = #{userId}
	</select>
	
	<!-- 프로필수정 -->
	<update id="updateProfile"		parameterType="user">
		UPDATE users
		<set>
			NICKNAME = #{nickname}, 
			ADDR = #{addr}, 
			PROFILE_IMAGE = #{profileImage}, 
			INTEREST_FIRST = #{interestFirst},
			INTEREST_SECOND= #{interestSecond},
			INTEREST_THIRD = #{interestThird},
			PROFILE_CONTENT = #{profileContent}
		</set>
		WHERE USER_ID = #{userId};
	</update>
	
	
	<!-- *수정예정 / 관리자 전용 회원목록조회 / Coin이 있어야함 / 유저No, 유저아이디, 유저이름, 유저닉네임, 생년월일, 연령, 가입경로, 가입일자, 코인, 현재상태 -->
	<select id="getUserList"  		parameterType="search"		resultMap="userSelectMap">
		SELECT
			USER_ID, USER_NAME, NICKNAME, BIRTH, AGE, JOIN_PATH, REGDATE, USER_ROLE, 
			x.INTEREST_NAME, y.INTEREST_NAME ,z.INTEREST_NAME
		FROM users LEFT OUTER JOIN INTEREST x 
			ON INTEREST_FIRST = x.INTEREST_NO
		    LEFT OUTER JOIN INTEREST y
			ON INTEREST_SECOND = y.INTEREST_NO
		    LEFT OUTER JOIN INTEREST z
			ON INTEREST_THIRD = z.INTEREST_NO		
		<if test="search.searchCondition != null">
			<where>
				<if test="search.searchCondition == 2 and search.searchKeyword !='' ">
					AND NICKNAME LIKE '%${search.searchKeyword}%'
				</if>
				<if test="search.searchCondition == 2 and search.searchKeyword !='' ">
					AND NICKNAME LIKE '%${searchCondition}%'
				</if>
			</where>
				<if test="searchState == 2">
					AND USER_ROLE = '2'
				</if>
				<if test="searchState == 3">
					AND USER_ROLE = '3'
				</if>
		</if>  	
	 </select>
	 
	 <select id="getTotalCount" 	parameterType="search"		resultType="int">
		SELECT COUNT(*) FROM users
		<!-- <if test="searchCondition != null">
			<where>
				<if test="searchCondition == 1 and searchKeyword !='' ">
					USER_ROLE = #{searchKeyword}
				</if>
				<if test="searchCondition == 2 and searchKeyword !='' ">
					REGDATE = #{searchKeyword}
				</if>
			</where>
		</if> -->
	</select>
		
	<!-- 비밀번호변경 -->
	<update id="updateUserPwd"		parameterType="user">
		UPDATE users
			<set>
			 	PWD = #{password}
			</set>
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 1. 닉네임수정 -->
	<update id="updateNickname"		parameterType="user">
		UPDATE users
		<set>
			NICKNAME = #{nickname}
		</set>
		WHERE USER_ID = #{userId};
	</update>
	
	<!-- 2. 프로필수정 -->
	<update id="updateContent"		parameterType="user">
		UPDATE users
		<set>
			PROFILE_CONTENT = #{profileContent}
		</set>
		WHERE USER_ID = #{userId};
	</update>
	
	<!-- 3. 관심사수정 -->
	<update id="updateInterest"		parameterType="user">
		UPDATE users
		<set>
			INTEREST_FIRST = #{interestFirst},
			INTEREST_SECOND= #{interestSecond},
			INTEREST_THIRD = #{interestThird}
		</set>
		WHERE USER_ID = #{userId};
	</update>

	

	<!-- 팔로우리스트 -->
	<select id="getFollowList"		parameterType="search"		resultMap="userSelectMap">
	</select>
		
</mapper>