<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="com.moopi.mvc.service.board.BoardDao">   	
 	
	<resultMap id="boardSelectMap" type="board">
		<result property="boardNo" 			column="BD_NO" 			jdbcType="NUMERIC"/>
		<result property="boardCategory"	column="BD_CATEGORY" 	jdbcType="CHAR" />
		<result property="boardName" 		column="BD_NAME" 		jdbcType="VARCHAR" /> 
		<result property="boardContent" 	column="BD_CONTENT" 	jdbcType="VARCHAR" />
		<result property="boardRegDate" 	column="BD_REGDATE" 	jdbcType="DATE" />
		<result property="boardUpdate" 		column="BD_UPDATE" 		jdbcType="DATE"  />
		<result property="boardState" 		column="BD_STATE" 		jdbcType="CHAR" />
		<result property="boardPassword" 	column="BD_PASSWORD" 	jdbcType="VARCHAR"  />
		<result property="boardMoimNo" 		column="BD_MM_NO" 		jdbcType="NUMERIC"  />
		<result property="boardLike" 		column="LIKECOUNT" 			jdbcType="NUMERIC"  />
		<result property="replyCount" 		column="REPLYCOUNT" 		jdbcType="NUMERIC"  />
		<result property="boardFile"        column="BD_FILE"		jdbcType="VARCHAR"/>
		<result property="boardHit"        column="BD_HIT"		jdbcType="NUMERIC"/>
		
		<association property="boardWriter"  javaType="user">
			<id property="userId" 				column="USER_ID" 			jdbcType="VARCHAR"/>
			<result property="profileImage"		column="PROFILE_IMAGE"		jdbcType="VARCHAR"/>
			<result property="nickname"			column="NICKNAME"			jdbcType="VARCHAR"/>
			<result property="userId"			column="USER_ID"			jdbcType="VARCHAR"/>
		</association>		
	</resultMap>	
	
	<select id="getBoardList" parameterType="map" resultMap="boardSelectMap">
	SELECT
	*
		FROM (SELECT
				inner_table.* , @ROWNUM := @ROWNUM +1 AS RNUM
                FROM(
					SELECT 
					BD.BD_NO    
				  , U.USER_ID
				  , U.NICKNAME
				  , U.PROFILE_IMAGE
				  , BD.BD_NAME
				  , BD.BD_CONTENT
				  , BD.BD_REGDATE
				  , BD.BD_UPDATE
				  , BD.BD_MM_NO
				  , BD.BD_STATE
				  , BD.BD_CATEGORY 
				  , BD.BD_FILE
				  , BD.BD_HIT
				  , LEFT(BD.BD_PASSWORD, 1) AS BD_PASSWORD
				  , ( SELECT 
						COUNT(*)
						FROM
						follow_like
						WHERE
						FL_TYPE = '1'
						AND
						FL_TARGET = BD.BD_NO
					) AS LIKECOUNT
				  , (
						SELECT 
						COUNT(*) 
						FROM 
						REPLY 
						WHERE 
						REPLY_STATE = '1'
						AND
						REPLY.BD_NO = BD.BD_NO
					) AS REPLYCOUNT
					  FROM 
					  BOARD BD,  USERS U
					WHERE 
					BD.BD_WRITER = U.USER_ID
                    <if test="map.boardCategory != null" >
					AND
					bd.bd_category = #{map.boardCategory}
					</if>
					<if test="map.boardState == 1 or map.boardState == 2" >
					AND
					BD.BD_STATE = #{map.boardState}
					</if>
					<if test="map.userId !=null">
					AND
					BD.bd_writer = #{map.userId}
					</if>
					<if test="map.boardMoimNo !=null">
					AND
					BD.bd_MM_No= #{map.boardMoimNo}
					</if>
					<if test="map.search.searchKeyword != null and map.search.searchCondition == 0">
					AND
					BD.BD_NAME LIKE CONCAT ('%',#{map.search.searchKeyword},'%')
					</if>
					<if test="map.search.searchKeyword != null and map.search.searchCondition == 1">
					AND
					BD.BD_CONTENT LIKE CONCAT ('%',#{map.search.searchKeyword},'%')
					</if>
					<if test="map.search.searchKeyword != null and map.search.searchCondition == 2">
					AND
					U.NICKNAME LIKE CONCAT ('%',#{map.search.searchKeyword},'%')
					</if>
					GROUP BY 
					BD.BD_NO
					, BD.BD_NAME
					, BD.BD_REGDATE
					, BD.BD_UPDATE
					, BD.BD_PASSWORD
                    ORDER BY 
                    BD.BD_NO DESC
                    ) inner_table,
                    (select @rownum := 0) as R
                    )tables
				WHERE rnum between #{map.search.startRowNum} and #{map.search.endRowNum}
		
		
	</select>
	
<!-- 게시글 조회  -->
	<select id="getBoard" parameterType="int" resultMap="boardSelectMap">
		SELECT 
		  BD.BD_NO
		, BD.BD_NAME
		, BD.BD_CONTENT
		, BD.BD_REGDATE
		, BD.BD_UPDATE
		, BD.BD_STATE
		, BD.BD_CATEGORY
		, BD_MM_NO
		, BD.BD_FILE
		, BD.BD_HIT
		, U.USER_ID
		, U.NICKNAME
		, U.PROFILE_IMAGE
		,  ( SELECT 
						COUNT(*)
						FROM
						follow_like
						WHERE
						FL_TYPE = '1'
						AND
						FL_TARGET = BD.BD_NO
					) AS LIKECOUNT
		FROM 
		  BOARD BD
		, USERS U
		WHERE 
		BD.BD_WRITER = U.USER_ID
		AND
		BD.BD_STATE = '1'
		AND
		BD.BD_NO = #{boardNo}  
	</select>
	
	<insert id="addBoard" parameterType="board" 
			useGeneratedKeys="true"  keyProperty="boardNo">
		INSERT INTO 
			BOARD 
			(
			  BD_CATEGORY
			, BD_WRITER
			, BD_NAME
			, BD_CONTENT
			, BD_REGDATE
			, BD_STATE
			, BD_PASSWORD
			, BD_FILE
			<if test= "board.boardMoimNo != 0">
			, BD_MM_NO
			</if>
			) 
		VALUES 
			(
			  #{board.boardCategory}
			, #{board.boardWriter.userId}
			, #{board.boardName}
			, #{board.boardContent}
			, now()
			, '1'
			, #{board.boardPassword}
			, #{board.boardFile}
			<if test= "board.boardMoimNo != 0">
			, #{board.boardMoimNo : NUMERIC}
			</if>
		)
	</insert>
	
	<update id="updateBoard" parameterType="board">
	UPDATE 
	BOARD SET
	   BD_NAME = #{board.boardName}
	 , BD_CONTENT = #{board.boardContent}
	 , BD_UPDATE = now()
	 WHERE 
	 BD_NO = #{board.boardNo}
	
	</update>
	
	<update id="deleteBoard" parameterType="board">
	UPDATE 
	BOARD SET
	BD_STATE = #{board.boardState}
	WHERE 
	BD_NO = #{board.boardNo}
	
	</update>
	
	<select id ="getLike" parameterType="map"  resultType="int">
	SELECT
		count(*)
	FROM
		FOLLOW_LIKE
	WHERE
		FL_TARGET IN (#{map.likeTarget})
	AND
		USER_ID IN (#{map.userId})
	AND
		FL_Type IN (1)
	</select>
	 
	<insert id ="addLike" parameterType="map">
	
	INSERT INTO
	FOLLOW_LIKE
	(  USER_ID
	, FL_TARGET
	, FL_TYPE) 
	VALUES (
	  #{map.userId}
	, #{map.likeTarget}
	, '1')
		
	</insert>
	
	<delete id ="deleteLike" parameterType="map">
	
	DELETE
	FROM
	follow_like
	WHERE 
	USER_ID = #{map.userId}
	AND
	FL_TARGET = #{map.likeTarget}
	AND
	FL_TYPE = '1'
	
	</delete>
	
	<select id="checkPassword" parameterType="int" resultMap="boardSelectMap">
	
	SELECT
	  BD_NO
	, BD_PASSWORD
	FROM
	  BOARD
	WHERE
	BD_NO = #{boardNo}
	</select>
	
		<update id="deleteBoard2" parameterType="board">
	UPDATE 
	BOARD SET
	BD_STATE = '3'
	WHERE 
	BD_NO = #{board.boardNo}
	
	</update>
	
	 <select id="getTotalCount" 	parameterType="map"		resultType="int">
				
					SELECT 
					COUNT(*) 
				  	  FROM 
					  BOARD BD, USERS U
					WHERE 
					BD.BD_WRITER = U.USER_ID
                    <if test="map.boardCategory != null" >
					AND
					bd.bd_category = #{map.boardCategory}
					</if>
					<if test="map.boardState == 1 or map.boardState == 2" >
					AND
					BD.BD_STATE = #{map.boardState}
					</if>
					<if test="map.userId !=null">
					AND
					BD.bd_writer = #{map.userId}
					</if>
					<if test="map.boardMoimNo !=null">
					AND
					BD.bd_MM_No= #{map.boardMoimNo}
					</if>
					<if test="map.search.searchKeyword != null and map.search.searchCondition == 0">
					AND
					BD.BD_NAME LIKE CONCAT ('%',#{map.search.searchKeyword},'%')
					</if>
					<if test="map.search.searchKeyword != null and map.search.searchCondition == 1">
					AND
					BD.BD_CONTENT LIKE CONCAT ('%',#{map.search.searchKeyword},'%')
					</if>
					<if test="map.search.searchKeyword != null and map.search.searchCondition == 2">
					AND
					U.NICKNAME LIKE CONCAT ('%',#{map.search.searchKeyword},'%')
					</if>
					
	</select>
	
	<update id="updateHit" parameterType="int">
	
		UPDATE BOARD 
		SET 
			BD_HIT = BD_HIT+1
		WHERE BD_NO =  #{boardNo}
		
	</update>
	
</mapper>	