<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.moopi.mvc.service.payment.PaymentDao">
 	
	<resultMap id="paymentSelectMap" type="payment">
		<result property="paymentNo" 			column="PAYMENT_NO" 		jdbcType="NUMERIC"/>
		<result property="paymentRegdate"		column="PAYMENT_REGDATE" 	jdbcType="DATE" />
		<result property="paymentRole"			column="PAYMENT_ROLE" 		jdbcType="VARCHAR" />
		<result property="paymentPrice" 		column="PAYMENT_PRICE" 		jdbcType="NUMERIC" />
		<result property="paymentCoinCount" 	column="PAYMENT_COIN_COUNT" jdbcType="NUMERIC" />
		<result property="paymentUid" 			column="PAYMENT_UID" 		jdbcType="VARCHAR" />
		
		<association property="paymentUserId" javaType="user">
			<result property="userId" column="PAYMENT_USER_ID" 	jdbcType="VARCHAR"  />
			<result property="userName" column="USER_NAME" jdbcType="VARCHAR"/>
			<result property="nickname" column="NICKNAME" jdbcType="VARCHAR"/>
			
		</association>
	</resultMap>
	
	<resultMap id="chartSelectMap" type="chartData">
		<result property="paymentRegdate"		column="PAYMENT_REGDATE" 	jdbcType="DATE" />
		<result property="paymentPrice" 		column="PAYMENT_PRICE" 		jdbcType="NUMERIC" />
		<result property="date" 	column="DATE" jdbcType="DATE" />
		<result property="start" 	column="START" jdbcType="DATE" />
		<result property="end" 	column="END" jdbcType="DATE" />
	</resultMap>
	
	

	<select id="getPayment" parameterType="int" resultMap="paymentSelectMap">
		SELECT
			PAYMENT_NO, PAYMENT_REGDATE, PAYMENT_ROLE, PAYMENT_USER_ID, PAYMENT_PRICE,
			PAYMENT_COIN_COUNT, PAYMENT_UID
			FROM Payment
		WHERE PAYMENT_NO = #{paymentNo}	
	</select>
	
 	<insert id="addPayment" parameterType="payment">
		INSERT
		INTO PAYMENT(PAYMENT_NO, PAYMENT_REGDATE, PAYMENT_ROLE, PAYMENT_USER_ID, PAYMENT_PRICE,
			PAYMENT_COIN_COUNT, PAYMENT_UID)
		VALUES(#{paymentNo}, now(), '1', #{paymentUserId.userId}, #{paymentPrice},
		#{paymentCoinCount}, #{paymentUid})
	</insert>
	
	<update id="updatePayment" parameterType="Payment">
		UPDATE PAYMENT
		<set>
			PAYMENT_ROLE = #{paymentRole},
			PAYMENT_COIN_COUNT = #{paymentCoinCount},
		</set>
		WHERE PAYMENT_NO = #{paymentNo}
	</update>
	
	<select id="paymentList" parameterType="payment" resultMap="paymentSelectMap">
		SELECT
			PAYMENT_NO , PAYMENT_USER_ID , PAYMENT_REGDATE , PAYMENT_PRICE , PAYMENT_COIN_COUNT
			FROM PAYMENT
			WHERE PAYMENT_USER_ID = #{paymentUserId.userId}
	</select>
	
	<select id="getPaymentList" parameterType="search" resultMap="paymentSelectMap">
		SELECT
			PAYMENT_NO, PAYMENT_REGDATE, PAYMENT_ROLE, PAYMENT_USER_ID, PAYMENT_PRICE,
			PAYMENT_COIN_COUNT, PAYMENT_UID
			FROM PAYMENT
			<if test="searchCondition !=null">
			<where>
			<if test="searchCondition == 1 and searchKeyword !='' ">
			PAYMENT_USER_ID = #{searchKeyword}
			</if>
			<if test="searchCondition == 2 and searchKeyword !='' ">
			PAYMENT_REGDATE = #{searchKeyword}
			</if>
			</where>
			</if>
	</select>
	
	<select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT count(*)
			FROM PAYMENT
			<if test="searchCondition != null">
			<where>
			<if test="searchCondition == 1 and searchKeyword !='' ">
			PAYMENT_USER_ID LIKE = #{searchKeyword}
			</if>
			<if test="searchCondition == 2 and searchKeyword !='' ">
			PAYMENT_REGDATE LIKE = #{searchKeyword}
			</if>
			</where>
			</if> 					
	 </select>
	
	<!-- 관리자 파트 결제 코인 등 -->
	<select id="adminPaymentList" resultMap="paymentSelectMap">
		SELECT PAYMENT_NO, PAYMENT_REGDATE, PAYMENT_ROLE, PAYMENT_USER_ID, PAYMENT_PRICE, 
		PAYMENT_COIN_COUNT, USER_NAME, NICKNAME
		FROM PAYMENT, users
		WHERE PAYMENT_USER_ID = USER_ID
			<if test="search.searchCondition != null">
				<if test="search.searchCondition == 1 and search.searchKeyword !=''">
				AND	PAYMENT_USER_ID LIKE '%${search.searchKeyword}%'
				</if>
				<if test="search.searchCondition == 3 and search.searchKeyword !=''">
				AND	NICKNAME LIKE '%${search.searchKeyword}%'
				</if>
			</if>
			
		ORDER BY
		<choose>
			<when test="payment.option == 'PRICE_ASC'">PAYMENT_PRICE ASC</when>
			<when test="payment.option == 'PRICE_DESC'">PAYMENT_PRICE DESC</when>
			<when test="payment.option == 'REGDATE_ASC'">PAYMENT_REGDATE ASC</when>
			<when test="payment.option == 'REGDATE_DESC'">PAYMENT_REGDATE DESC</when>
			<otherwise>PAYMENT_REGDATE DESC</otherwise>
		</choose>
	</select>
	
	
	<!-- 월별통계 -->
	<select id="getMonthList" parameterType="search" resultMap="chartSelectMap">
		select 
		sum(payment_price)  AS payment_price, date_format(payment_regdate, '%c') AS date
		from payment 
		group by date
		order by 2
	</select>
	
	<!-- 주간통계 -->
	<select id="getWeekList" parameterType="search" resultMap="chartSelectMap">
		SELECT DATE_FORMAT(DATE_SUB(payment_regdate, INTERVAL (DAYOFWEEK(payment_regdate)-1) DAY), '%m/%d') as start,
       DATE_FORMAT(DATE_SUB(payment_regdate, INTERVAL (DAYOFWEEK(`payment_regdate`)-7) DAY), '%m/%d') as end,
       DATE_FORMAT(payment_regdate, '%Y%U') AS date,
       sum(payment_price) AS payment_price
 		 FROM payment
		 GROUP BY date
		 order by date
	</select>
	
	<!-- 일별통계 -->
	<select id="getDayList" parameterType="search" resultMap="chartSelectMap">
		select 
		sum(payment_price)  AS payment_price, date_format(payment_regdate, '%c월%d일') AS date
		from payment 
		group by date
		order by date
	</select>
	
	<!-- 기간별통계 -->
	<select id="getSelectList" parameterType="search" resultMap="chartSelectMap">
		SELECT DATE(payment_regdate) AS date,
       sum(payment_price) As payment_price
  		FROM payment
		 WHERE DATE(payment_regdate) &gt;= STR_TO_DATE(#{startDay}, '%Y-%m-%d')
  	 AND DATE(payment_regdate) &lt;= STR_TO_DATE(#{endDay}, '%Y-%m-%d')
		 GROUP BY date
		 order by date
	</select>
	
</mapper> 